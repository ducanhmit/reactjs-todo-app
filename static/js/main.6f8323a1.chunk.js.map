{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","key","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","this","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","newTodo","post","delete","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6f8323a1.chunk.js","sourcesContent":["import React from 'react'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"header-container\">\n                <h1 className=\"header-title\">Simple Todo App</h1>\n            </header>\n        );\n    }\n}\nexport default Header;","import React from 'react'\n\n\nfunction TodoItem (props) {\n    const { completed, id, title } = props.todo;\n\n    return (\n        <li className=\"todo-item\">\n            <input \n                type=\"checkbox\" \n                checked={completed}\n                onChange={() => props.handleChange(id)}     \n            />\n            <span className={completed ? \"completed\" : null}>\n                {title}\n            </span>\n            <button className=\"btn-style\"\n                    onClick={() => props.deleteTodo(id)}>\n             X \n            </button>\n        </li>\n    );\n}\nexport default TodoItem;","import React from 'react';\nimport TodoItem from './TodoItem'\n\nfunction Todos (props) {\n    return (\n        <div>\n            <ul>\n                {props.todos.map(todo => (\n                    <TodoItem \n                        key={todo.id} \n                        todo={todo}\n                        handleChange = {props.handleChange}\n                        deleteTodo={props.deleteTodo} />\n                ))}\n            </ul>\n        </div>\n    );\n}\nexport default Todos;","import React, { useState } from 'react';;\n\n\nfunction AddTodo (props) {\n    const [title, setTitle] = useState(\"\");\n\n    const onInputChange = e => {\n        setTitle(e.target.value);\n    };\n\n    const addTodo = e => {\n        e.preventDefault();\n        props.addTodo(title);\n        setTitle(\"\");\n    };\n\n    return (\n        <form className=\"form-container\" onSubmit={addTodo}>\n            <input type=\"text\" \n                    placeholder=\"Add Todo...\" \n                    className=\"input-text\"\n                    value={title}\n                    onChange={onInputChange}/>\n            <input type=\"submit\" \n                    value=\"Submit\" \n                    className=\"input-submit\" />\n        </form>\n    );\n}\n\nexport default AddTodo;","import React from 'react';\n\nconst RED = \"#ff0000\";\nconst BLUE = \"#0000ff\";\nconst GRAY = \"#678c89\";\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.submitThemeColor = this.submitThemeColor.bind(this)\n    }\n\n    submitThemeColor(color) {\n        // lưu giá trị mã màu theme vào Store - redux\n        if (color) {\n            console.log('handleChangeTheme');\n            this.props.saveColorTheme(color);\n        }\n    }\n\n    componentWillReceiveProps (nextprops) {\n        console.log('UNSAFE_componentWillReceiveProps: ' + JSON.stringify(nextprops))\n        document\n            .documentElement\n            .style\n            .setProperty(\"--main-color\", nextprops.themeColor.color);\n    }\n\n    render() {\n        return (\n            <div className=\"footer\">\n                <div className=\"vertical-center\">\n                    <span>Choose Theme </span>\n                    <button onClick={()=>this.submitThemeColor(RED)} className=\n                    \"dot red\"/>\n                    <button onClick={()=>this.submitThemeColor(BLUE)} className=\n                    \"dot blue\"/>\n                    <button onClick={()=>this.submitThemeColor(GRAY)} className=\n                    \"dot gray\"/>\n            </div>\n</div>\n        )\n    }\n}\nexport default Footer;","import { connect } from 'react-redux';\nimport { saveTheme } from '../actions/changeThemeAction';\nimport Footer from '../../components/layout/Footer';\n\nconst mapDispatchToProps = dispatch => ({\n    dispatch,\n    saveColorTheme: color => dispatch(saveTheme(color)),\n});\n\nfunction mapStateToProps(state){\n    return {\n        themeColor: state.color\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Footer);","export const saveTheme = color => ({\n    type: \"CHANGE_THEME\",\n    payload: {\n        color\n    }\n});","import React, { useState, useEffect } from 'react';\nimport Header from './layout/Header';\nimport Todos from './Todos';\nimport axios from \"axios\";\nimport AddTodo from \"./AddTodo\";\nimport Footer from \"../store/containers/Footer\";\n\nfunction TodoApp () {\n    const [state, setState] = useState({\n        todos: [],\n    });\n\n    const handleCheckboxChange = id => {\n        setState({\n            todos: state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        });\n    };\n\n    const addTodo = title => {\n        const newTodo = {\n            title: title,\n            completed: false,\n        };\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\n            .then(response => {\n                console.log(response.data)\n                setState({\n                    todos: [...state.todos, response.data]\n                })\n            });\n    };\n\n    const deleteTodo = id => {\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(response => setState({\n                todos: [\n                    ...state.todos.filter(todo => {\n                        return todo.id !== id;\n                    })\n                ]\n            }))\n    };\n\n    useEffect(() => {\n        const config = {\n            params: {\n                _limit: 5\n            }\n        }\n\n        //tạo GET request để lấy danh sách todos\n        axios.get(\"https://jsonplaceholder.typicode.com/todos\", config)\n            .then(response => setState({ todos: response.data }));\n\n\n    }, [])\n\n    \n    \n    return (\n        <div className=\"container\">\n            <Header />\n            <AddTodo addTodo={addTodo}/>\n            <Todos todos={state.todos} \n                    handleChange={handleCheckboxChange}\n                    deleteTodo={deleteTodo}\n            />\n            <Footer />\n        </div>\n            \n    );\n}\nexport default TodoApp;","let initState = {\n    color: \"#FFFFFF\"\n};\n\nexport default function themeReducer(state = initState, action) {\n    switch (action.type) {\n        case 'CHANGE_THEME':\n                console.log('themeReducer: ' + JSON.stringify(state))\n            return Object.assign({}, state, {\n                color: action.payload.color\n            });\n        default:\n            return initState;\n    }\n}","import { combineReducers } from 'redux';\nimport color from './themeReducer';\n\nexport default combineReducers({\n    color\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoApp from './components/TodoApp';\nimport './App.css';\n\nimport { createStore} from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}